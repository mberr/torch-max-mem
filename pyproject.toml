# See https://setuptools.readthedocs.io/en/latest/build_meta.html
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "torch_max_mem"
version = "0.1.4-dev"
description = "Maximize memory utilization with PyTorch."
# Author information
authors = [{ name = "Max Berrendorf", email = "max.berrendorf@gmail.com" }]
maintainers = [{ name = "Max Berrendorf", email = "max.berrendorf@gmail.com" }]

# See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#classifiers
# Search tags using the controlled vocabulary at https://pypi.org/classifiers
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    # TODO add your topics from the Trove controlled vocabulary (see https://pypi.org/classifiers)
]
keywords = [
    "snekpack",     # please keep this keyword to credit the cookiecutter-snekpack template
    "cookiecutter",
    "torch",
]

# License Information. This can be any valid SPDX identifiers that can be resolved
# with URLs like https://spdx.org/licenses/MIT
# See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license
license = { file = "License" }

requires-python = ">=3.8"
dependencies = [
    "torch>=2.0",
    "torch<2.4; platform_system=='Windows'",
    "typing_extensions",
]

[project.optional-dependencies]
tests = ["numpy", "numpy<2; platform_system=='Windows'", "pytest", "coverage"]
docs = [
    # ... until RTD issues are fixed
    "sphinx<7",
    "sphinx-rtd-theme",
    "sphinx-click",
    "sphinx_automodapi",
    # To include LaTeX comments easily in your docs.
    # If you uncomment this, don't forget to do the same in docs/conf.py
    # texext
]

[project.urls]
Homepage = "https://github.com/mberr/torch-max-mem"
Download = "https://github.com/mberr/torch-max-mem/releases"
"Bug Tracker" = "https://github.com/mberr/torch-max-mem/issues"
"Source Code" = "https://github.com/mberr/torch-max-mem"

[project.readme]
file = "README.md"
content-type = "text/markdown"
# URLs associated with the project


[tool.setuptools]
# Where is my code
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
# this implicitly sets `packages = ":find"`
where = ["src"] # list of folders that contain the packages (["."] by default)


# Doc8, see https://doc8.readthedocs.io/en/stable/readme.html#ini-file-usage
[tool.doc8]
max-line-length = 120

# Coverage, see https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
source = ["torch_max_mem"]
omit = ["tests/*", "docs/*"]

[tool.coverage.paths]
source = ["src/torch_max_mem", ".tox/*/lib/python*/site-packages/torch_max_mem"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "def __str__",
    "def __repr__",
]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
include_trailing_comma = true
reverse_relative = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules
extend-select = [
    "F",   # pyflakes
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "C90", # mccabe
    "I",   # isort
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "B",   # bugbear
    "S",   # bandit
    "T20", # print
    "N",   # pep8 naming
    # "ERA", # eradicate commented out code
    # "NPY", # numpy checks
    # "RUF", # ruff rules
]
ignore = [
    # "D105", # Missing docstring in magic method
    # "E203", # Black conflicts with the following
    # "S101", # Asserts, TODO remove
    # "D102", # Missing docstring in init TODO remove
]

# See https://docs.astral.sh/ruff/settings/#per-file-ignores
[tool.ruff.lint.per-file-ignores]
# asserts in tests
"tests/**/*.py" = ["S101"]
"docs/source/conf.py" = ["D100"]


[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.isort]
known-third-party = []
known-first-party = ["torch_max_mem", "tests"]
relative-imports-order = "closest-to-furthest"

# Pytest, see https://docs.pytest.org/en/stable/reference/customize.html#pyproject-toml
[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
